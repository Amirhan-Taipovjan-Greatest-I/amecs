plugins {
	id "java"
	id "idea"
	id "maven-publish"
	id "fabric-loom" version "0.2.4-SNAPSHOT"
	id "com.github.ben-manes.versions" version "0.21.0"
	id "com.github.johnrengelman.shadow" version "5.0.0"
	id "com.matthewprenger.cursegradle" version "1.2.0"
}

repositories {
	maven {
		url = "http://maven.fabricmc.net/"
		name = "Fabric"
	}
	maven {
		url = "https://minecraft.curseforge.com/api/maven"
		name = "CurseForge"
	}
	jcenter()
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${mod_version}+${minecraft_version}"
group = maven_group

minecraft {
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings "net.fabricmc:yarn:${minecraft_version}+build.${yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${loader_version}"

	modApi "net.fabricmc.fabric-api:fabric-api-base:+"
	modApi "net.fabricmc.fabric-api:fabric-keybindings-v0:+"
	modApi "net.fabricmc.fabric-api:fabric-resource-loader-v0:+"
}

processResources {
	inputs.properties "version": project.version,
			"archives_base_name": project.archives_base_name

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version,
				"archives_base_name": project.archives_base_name
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	//noinspection GroovyAssignabilityCheck
	archiveClassifier.set("sources")
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// Configure shadowing
shadowJar {
	// Needed to override the jar output and be used by Loom's remapJar
	// Loom sets the jar classifier to dev and uses the default classifier for the output
	//noinspection GroovyAssignabilityCheck
	archiveClassifier.set("dev")
	configurations = [project.configurations.shadow]
	//relocate "some.library", "my.mod.shadowed.some.library"
}
jar.finalizedBy shadowJar

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar.archiveFile) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
